var Posts = require('./models/posts'),
    Contact = require('./models/contact'),
    Menu = require('./models/menu'),
    Users = require('./models/user'),
    Comments = require('./models/comment'),
    Answers = require('./models/answer'),
    Types = require('./models/type'),
    Cates = require('./models/category'),
    Videos = require('./models/video'),
    flash = require('connect-flash'),
    Cvideos = require('./models/video_category');
module.exports = function(app) {
    app.get('/', function(req, res) {
        Menu.find({}).sort({
            sort: 1
        }).exec(function(err, m) {
            Posts.find({}).sort({
                _id: -1
            }).exec(function(err, n) {
                Posts.find({}).sort({
                    views: -1
                }).exec(function(err, h) {
                    Types.find({}).exec(function(err, t) {
                        Cates.find({}).sort({
                            _id: -1
                        }).exec(function(err, c) {
                            Videos.find().sort({
                                _id: -1
                            }).exec(function(err, v) {
                                res.render('home/index', {
                                    user: req.user,
                                    menu: m,
                                    news: n,
                                    hots: h,
                                    categories: c,
                                    videos: v,
                                    types: t,
                                    user: req.user,
                                    message: req.flash('message'),
                                    title: 'Trang chủ'
                                });
                            });
                        });
                    });
                });
            });
        });
    });
    app.get('/tim-kiem', function(req, res) {
        res.send(req.query.s);
    });
    app.get('/thong-tin-ca-nhan', isLoggedIn, function(req, res) {
        Menu.find({}).sort({
            sort: 1
        }).exec(function(err, m) {
            Posts.find({}).sort({
                _id: -1
            }).exec(function(err, n) {
                Posts.find({}).sort({
                    views: -1
                }).exec(function(err, h) {
                    Types.find({}).exec(function(err, t) {
                        Cates.find({}).sort({
                            _id: -1
                        }).exec(function(err, c) {
                            Videos.find().sort({
                                _id: -1
                            }).exec(function(err, v) {
                                res.render('home/profile', {
                                    user: req.user,
                                    menu: m,
                                    news: n,
                                    hots: h,
                                    categories: c,
                                    videos: v,
                                    types: t,
                                    user: req.user,
                                    message: req.flash('message'),
                                    title: 'Thông tin cá nhân'
                                });
                            });
                        });
                    });
                });
            });
        });
    });
    app.get('/lien-he', function(req, res) {
        Menu.find({}).sort({
            sort: 1
        }).exec(function(err, m) {
            Posts.find({}).sort({
                _id: -1
            }).exec(function(err, n) {
                Posts.find({}).sort({
                    views: -1
                }).exec(function(err, h) {
                    Types.find({}).exec(function(err, t) {
                        Cates.find({}).sort({
                            _id: -1
                        }).exec(function(err, c) {
                            Contact.findOne({}, function(err, ct) {
                                res.render('home/contact', {
                                    layout: 'layoutnull',
                                    user: req.user,
                                    menu: m,
                                    news: n,
                                    hots: h,
                                    contact: ct,
                                    categories: c,
                                    types: t,
                                    user: req.user,
                                    message: req.flash('message'),
                                    title: 'Liên hệ'
                                });
                            });
                        });
                    });
                });
            });
        });
    });
    app.get('/video', function(req, res) {
        Menu.find({}).sort({
            sort: 1
        }).exec(function(err, m) {
            Posts.find({}).sort({
                _id: -1
            }).exec(function(err, n) {
                Posts.find({}).sort({
                    views: -1
                }).exec(function(err, h) {
                    Types.find({}).exec(function(err, t) {
                        Cates.find({}).sort({
                            _id: -1
                        }).exec(function(err, c) {
                            Cvideos.find().exec(function(err, cvs) {
                                Videos.find().sort({
                                    _id: -1
                                }).exec(function(err, vs) {
                                    res.render('home/video-category', {
                                        user: req.user,
                                        menu: m,
                                        news: n,
                                        hots: h,
                                        categories: c,
                                        videos: vs,
                                        cvideos: cvs,
                                        types: t,
                                        user: req.user,
                                        message: req.flash('message'),
                                        title: "Video"
                                    });
                                });
                            });
                        });
                    });
                });
            });
        });
    });
    app.get('/dang-nhap', function(req, res){
        Menu.find({}).sort({
            sort: 1
        }).exec(function(err, m) {
            Posts.find({}).sort({
                _id: -1
            }).exec(function(err, n) {
                Posts.find({}).sort({
                    views: -1
                }).exec(function(err, h) {
                    Types.find({}).exec(function(err, t) {
                        Cates.find({}).sort({
                            _id: -1
                        }).exec(function(err, c) {
                            Videos.find().sort({
                                _id: -1
                            }).exec(function(err, v) {
                                res.render('home/login-member', {
                                    user: req.user,
                                    menu: m,
                                    news: n,
                                    hots: h,
                                    categories: c,
                                    videos: v,
                                    types: t,
                                    user: req.user,
                                    message: req.flash('message'),
                                    title: 'Đăng nhập'
                                });
                            });
                        });
                    });
                });
            });
        });
    });
    app.get('/dang-ky', function(req, res){
        Menu.find({}).sort({
            sort: 1
        }).exec(function(err, m) {
            Posts.find({}).sort({
                _id: -1
            }).exec(function(err, n) {
                Posts.find({}).sort({
                    views: -1
                }).exec(function(err, h) {
                    Types.find({}).exec(function(err, t) {
                        Cates.find({}).sort({
                            _id: -1
                        }).exec(function(err, c) {
                            Videos.find().sort({
                                _id: -1
                            }).exec(function(err, v) {
                                res.render('home/register-member', {
                                    user: req.user,
                                    menu: m,
                                    news: n,
                                    hots: h,
                                    categories: c,
                                    videos: v,
                                    types: t,
                                    user: req.user,
                                    message: req.flash('message'),
                                    title: 'Đăng ký'
                                });
                            });
                        });
                    });
                });
            });
        });
    });
    app.get('/thong-bao', function(req, res){
        Menu.find({}).sort({
            sort: 1
        }).exec(function(err, m) {
            Posts.find({}).sort({
                _id: -1
            }).exec(function(err, n) {
                Posts.find({}).sort({
                    views: -1
                }).exec(function(err, h) {
                    Types.find({}).exec(function(err, t) {
                        Cates.find({}).sort({
                            _id: -1
                        }).exec(function(err, c) {
                            Videos.find().sort({
                                _id: -1
                            }).exec(function(err, v) {
                                res.render('home/report', {
                                    user: req.user,
                                    menu: m,
                                    news: n,
                                    hots: h,
                                    categories: c,
                                    videos: v,
                                    types: t,
                                    user: req.user,
                                    message: req.flash('message'),
                                    title: 'Thông báo'
                                });
                            });
                        });
                    });
                });
            });
        });
    });
    app.get('/:p', function(req, res, next) {
        Menu.find({}).sort({
            sort: 1
        }).exec(function(err, m) {
            Posts.findOne({
                url: req.params.p
            }, function(err, p) {
                if (p == null) {
                    return next();
                }
                p.views = p.views + 1;
                p.save(function(err, p) {
                    Cates.find({}, function(err, c) {
                        var dataCmt = [];
                        Comments.find({
                            pid: p._id
                        }).sort({
                            _id: -1
                        }).exec(function(err, cmt) {
                            resComment(0, cmt, dataCmt, function(result) {
                                Posts.find({}).sort({
                                    views: -1
                                }).exec(function(err, h) {
                                    Posts.find({}).sort({
                                        views: -1
                                    }).exec(function(err, n) {
                                        res.render('home/post-detail', {
                                            user: req.user,
                                            title: p.name,
                                            menu: m,
                                            post: p,
                                            news: n,
                                            categories: c,
                                            hots: h,
                                            message: req.flash('message'),
                                            cmt: result
                                        });
                                    });
                                });
                            });
                        });
                    });
                });
            });
        });
    });
    app.get('/:c', function(req, res, next) {
        Menu.find({}).sort({
            sort: 1
        }).exec(function(err, m) {
            if (req.query.page) {
                var page = req.query.page;
            } else {
                var page = 1;
            }
            if (req.query.record) {
                var record = req.query.record;
            } else {
                var record = 10;
            }
            Cates.findOne({
                url: req.params.c
            }, function(err, c) {
                if (c == null) {
                    return next();
                }
                Posts.find({
                    'category.url': req.params.c
                }).sort({
                    _id: -1
                }).skip(page * record - record).limit(record).exec(function(err, p) {
                    Posts.find().sort({
                        views: -1
                    }).exec(function(err, h) {
                        Posts.find().sort({
                            _id: -1
                        }).exec(function(err, n) {
                            Cates.find().sort({
                                _id: -1
                            }).exec(function(err, cs) {
                                res.render('home/category', {
                                    user: req.user,
                                    posts: p,
                                    news: n,
                                    hots: h,
                                    menu: m,
                                    category: c,
                                    categories: cs,
                                    total: Math.ceil(1 / 10),
                                    current: 1 || req.query.page,
                                    message: req.flash('message'),
                                    title: c.name
                                });
                            });
                        });
                    });
                });
            });
        });
    });
    app.get('/:t', function(req, res, next) {
        Menu.find({}).sort({
            sort: 1
        }).exec(function(err, m) {
            Types.findOne({
                url: req.params.t
            }, function(err, t) {
                if (t == null) {
                    return next();
                }
                Cates.find().sort({
                    _id: -1
                }).exec(function(err, c) {
                    Posts.find().sort({
                        views: -1
                    }).exec(function(err, h) {
                        Posts.find().sort({
                            _id: -1
                        }).exec(function(err, n) {
                            Posts.find({
                                'type.url': req.params.t
                            }).sort({
                                views: -1
                            }).exec(function(err, p) {
                                res.render('home/type', {
                                    user: req.user,
                                    posts: p,
                                    news: n,
                                    hots: h,
                                    menu: m,
                                    type: t,
                                    title: t.name,
                                    message: req.flash('message'),
                                    categories: c
                                });
                            });
                        });
                    });
                });
            });
        });
    });
    app.get('/:v', function(req, res, next) {
        Menu.find({}).sort({
            sort: 1
        }).exec(function(err, m) {
            Posts.find({}).sort({
                _id: -1
            }).exec(function(err, n) {
                Posts.find({}).sort({
                    views: -1
                }).exec(function(err, h) {
                    Types.find({}).exec(function(err, t) {
                        Cates.find({}).sort({
                            _id: -1
                        }).exec(function(err, c) {
                            Cvideos.find().exec(function(err, cv) {
                                Videos.find().sort({
                                    _id: -1
                                }).exec(function(err, vs) {
                                    Videos.findOne({
                                        url: req.params.v
                                    }, function(err, v) {
                                        if (!v) {
                                            return next();
                                        }
                                        Comments.find({
                                            pid: v._id
                                        }).sort({
                                            _id: -1
                                        }).exec(function(err, cmt) {
                                            var dataCmt = [];
                                            resComment(0, cmt, dataCmt, function(result) {
                                                Posts.find({}).sort({
                                                    views: -1
                                                }).exec(function(err, h) {
                                                    Posts.find({}).sort({
                                                        views: -1
                                                    }).exec(function(err, n) {
                                                        res.render('home/video-detail', {
                                                            user: req.user,
                                                            menu: m,
                                                            news: n,
                                                            hots: h,
                                                            categories: c,
                                                            videos: vs,
                                                            cvideos: cv,
                                                            video: v,
                                                            types: t,
                                                            user: req.user,
                                                            cmt: result,
                                                            message: req.flash('message'),
                                                            title: v.name
                                                        });
                                                    });
                                                });
                                            });
                                        });
                                    });
                                });
                            });
                        });
                    });
                });
            });
        });
    });
    app.get('/:cv', function(req, res, next) {
        Menu.find({}).sort({
            sort: 1
        }).exec(function(err, m) {
            Posts.find({}).sort({
                _id: -1
            }).exec(function(err, n) {
                Posts.find({}).sort({
                    views: -1
                }).exec(function(err, h) {
                    Types.find({}).exec(function(err, t) {
                        Cates.find({}).sort({
                            _id: -1
                        }).exec(function(err, c) {
                            Cvideos.find().exec(function(err, cvs) {
                                Videos.find().sort({
                                    _id: -1
                                }).exec(function(err, vs) {
                                    Cvideos.findOne({
                                        url: req.params.cv
                                    }, function(err, cv) {
                                        if (!cv) {
                                            return next();
                                        }
                                        res.render('home/video-category-detail', {
                                            user: req.user,
                                            menu: m,
                                            news: n,
                                            hots: h,
                                            categories: c,
                                            videos: vs,
                                            cvideos: cvs,
                                            cvideo: cv,
                                            types: t,
                                            user: req.user,
                                            message: req.flash('message'),
                                            title: cv.name
                                        });
                                    });
                                });
                            });
                        });
                    });
                });
            });
        });
    });
    app.post('/comment/:pid', function(req, res) {
        if (req.body.cid) {
            new Answers({
                cid: req.body.cid,
                content: req.body.content,
                user: {
                    fullname: req.body.fullname,
                    username: req.body.email
                }
            }).save(function(err, a) {
                return res.redirect('/' + req.params.pid);
            });
        } else {
            new Comments({
                pid: req.params.pid,
                user: {
                    fullname: req.body.fullname,
                    username: req.body.email
                },
                content: req.body.content
            }).save(function(err, c) {
                return res.redirect('/' + req.params.pid);
            });
        }
    });
    
    app.get('/test/makeMenu', function(req, res) {
        Types.find({}, function(err, t) {
            makeMenu(0, t, function(type) {
                res.json(type);
            });
        });
    });

    function makeUrl(str) {
        var str = str.toString().trim().toLowerCase();
        return str.replace(/á|ạ|ả|ã|à|ă|ắ|ẳ|ặ|â|ấ|ậ|ẫ/g, 'a').replace(/é|ẹ|ẻ|è|ê|ế|ệ|ề|ể/g, 'e').replace(/ó|ọ|ỏ|ò|õ|ô|ố|ộ|ổ|ồ|ỗ|ố|ơ|ớ|ở|ờ|ợ/g, 'o').replace(/ù|ú|ụ|ủ|ũ|ư|ừ|ứ|ự|ử|ữ/g, 'u').replace(/ì|í|ị|ỉ|ĩ/g, 'i').replace(/ỳ|ý|ỵ|ỷ|ỹ/g, 'y').replace(/đ/g, 'd').replace(/:|( -)/g, '').replace(/\n|\r| /g, '-');
    }

    function first(i, arr, id) {
        if (arr.length != 0) {
            if (arr[i].type._id == id) {
                return arr[i];
            } else {
                i++;
                first(i, arr, id);
            }
        }
    }
    var menu = [];

    function makeMenu(i, type, callback) {
        Cates.find({
            'type._id': type[i]._id
        }, function(err, c) {
            type[i].category = c;
            i++;
            if (i == type.length) {
                return callback(type);
            }
            makeMenu(i, type, callback);
        });
    }
    app.get('/*', function(req, res) {
        res.redirect('/');
    });

    function resComment(i, arr, result, callback) {
        if (arr.length == 0) {
            return callback([]);
        }
        if (i < arr.length) {
            Answers.find({
                cid: arr[i]._id
            }).exec(function(err, a) {
                result.push({
                    comment: arr[i],
                    answers: a
                });
                i++;
                resComment(i, arr, result, callback);
            });
        }
        if (i == arr.length) {
            return callback(result);
        }
    }

    function isLoggedIn(req, res, next) {
        if (req.user) {
            return next();
        }
        return res.redirect('/');
    }
}